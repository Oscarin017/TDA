//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TDAWPF.TDAService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TDAService.ITDAService")]
    public interface ITDAService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectConfiguracion", ReplyAction="http://tempuri.org/ITDAService/SelectConfiguracionResponse")]
        TDA.Entities.Configuraciones[] SelectConfiguracion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectConfiguracion", ReplyAction="http://tempuri.org/ITDAService/SelectConfiguracionResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Configuraciones[]> SelectConfiguracionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectRol", ReplyAction="http://tempuri.org/ITDAService/SelectRolResponse")]
        TDA.Entities.Roles[] SelectRol();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectRol", ReplyAction="http://tempuri.org/ITDAService/SelectRolResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Roles[]> SelectRolAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPagina", ReplyAction="http://tempuri.org/ITDAService/SelectPaginaResponse")]
        TDA.Entities.Paginas[] SelectPagina();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPagina", ReplyAction="http://tempuri.org/ITDAService/SelectPaginaResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Paginas[]> SelectPaginaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectRolPagina", ReplyAction="http://tempuri.org/ITDAService/SelectRolPaginaResponse")]
        TDA.Entities.RolPaginas[] SelectRolPagina();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectRolPagina", ReplyAction="http://tempuri.org/ITDAService/SelectRolPaginaResponse")]
        System.Threading.Tasks.Task<TDA.Entities.RolPaginas[]> SelectRolPaginaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectBaseSalario", ReplyAction="http://tempuri.org/ITDAService/SelectBaseSalarioResponse")]
        TDA.Entities.BaseSalarios[] SelectBaseSalario();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectBaseSalario", ReplyAction="http://tempuri.org/ITDAService/SelectBaseSalarioResponse")]
        System.Threading.Tasks.Task<TDA.Entities.BaseSalarios[]> SelectBaseSalarioAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectTipoIdentificacion", ReplyAction="http://tempuri.org/ITDAService/SelectTipoIdentificacionResponse")]
        TDA.Entities.TipoIdentificaciones[] SelectTipoIdentificacion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectTipoIdentificacion", ReplyAction="http://tempuri.org/ITDAService/SelectTipoIdentificacionResponse")]
        System.Threading.Tasks.Task<TDA.Entities.TipoIdentificaciones[]> SelectTipoIdentificacionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertUsuario", ReplyAction="http://tempuri.org/ITDAService/InsertUsuarioResponse")]
        TDA.Entities.Resultado InsertUsuario(TDA.Entities.Usuarios usu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertUsuario", ReplyAction="http://tempuri.org/ITDAService/InsertUsuarioResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertUsuarioAsync(TDA.Entities.Usuarios usu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateUsuario", ReplyAction="http://tempuri.org/ITDAService/UpdateUsuarioResponse")]
        TDA.Entities.Resultado UpdateUsuario(TDA.Entities.Usuarios usu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateUsuario", ReplyAction="http://tempuri.org/ITDAService/UpdateUsuarioResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateUsuarioAsync(TDA.Entities.Usuarios usu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectUsuario", ReplyAction="http://tempuri.org/ITDAService/SelectUsuarioResponse")]
        TDA.Entities.Usuarios[] SelectUsuario(TDA.Entities.Usuarios usu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectUsuario", ReplyAction="http://tempuri.org/ITDAService/SelectUsuarioResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Usuarios[]> SelectUsuarioAsync(TDA.Entities.Usuarios usu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarUsuarioID", ReplyAction="http://tempuri.org/ITDAService/BuscarUsuarioIDResponse")]
        TDA.Entities.Usuarios[] BuscarUsuarioID(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarUsuarioID", ReplyAction="http://tempuri.org/ITDAService/BuscarUsuarioIDResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Usuarios[]> BuscarUsuarioIDAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPais", ReplyAction="http://tempuri.org/ITDAService/InsertPaisResponse")]
        TDA.Entities.Resultado InsertPais(TDA.Entities.Paises pai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPais", ReplyAction="http://tempuri.org/ITDAService/InsertPaisResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPaisAsync(TDA.Entities.Paises pai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdatePais", ReplyAction="http://tempuri.org/ITDAService/UpdatePaisResponse")]
        TDA.Entities.Resultado UpdatePais(TDA.Entities.Paises pai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdatePais", ReplyAction="http://tempuri.org/ITDAService/UpdatePaisResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdatePaisAsync(TDA.Entities.Paises pai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeletePais", ReplyAction="http://tempuri.org/ITDAService/DeletePaisResponse")]
        TDA.Entities.Resultado DeletePais(TDA.Entities.Paises pai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeletePais", ReplyAction="http://tempuri.org/ITDAService/DeletePaisResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeletePaisAsync(TDA.Entities.Paises pai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPais", ReplyAction="http://tempuri.org/ITDAService/SelectPaisResponse")]
        TDA.Entities.Paises[] SelectPais(TDA.Entities.Paises pai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPais", ReplyAction="http://tempuri.org/ITDAService/SelectPaisResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Paises[]> SelectPaisAsync(TDA.Entities.Paises pai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarPaisID", ReplyAction="http://tempuri.org/ITDAService/BuscarPaisIDResponse")]
        TDA.Entities.Paises[] BuscarPaisID(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarPaisID", ReplyAction="http://tempuri.org/ITDAService/BuscarPaisIDResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Paises[]> BuscarPaisIDAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertEstado", ReplyAction="http://tempuri.org/ITDAService/InsertEstadoResponse")]
        TDA.Entities.Resultado InsertEstado(TDA.Entities.Estados est);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertEstado", ReplyAction="http://tempuri.org/ITDAService/InsertEstadoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertEstadoAsync(TDA.Entities.Estados est);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateEstado", ReplyAction="http://tempuri.org/ITDAService/UpdateEstadoResponse")]
        TDA.Entities.Resultado UpdateEstado(TDA.Entities.Estados est);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateEstado", ReplyAction="http://tempuri.org/ITDAService/UpdateEstadoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateEstadoAsync(TDA.Entities.Estados est);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectEstado", ReplyAction="http://tempuri.org/ITDAService/SelectEstadoResponse")]
        TDA.Entities.Estados[] SelectEstado(TDA.Entities.Estados est);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectEstado", ReplyAction="http://tempuri.org/ITDAService/SelectEstadoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Estados[]> SelectEstadoAsync(TDA.Entities.Estados est);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarEstadoID", ReplyAction="http://tempuri.org/ITDAService/BuscarEstadoIDResponse")]
        TDA.Entities.Estados[] BuscarEstadoID(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarEstadoID", ReplyAction="http://tempuri.org/ITDAService/BuscarEstadoIDResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Estados[]> BuscarEstadoIDAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertMarca", ReplyAction="http://tempuri.org/ITDAService/InsertMarcaResponse")]
        TDA.Entities.Resultado InsertMarca(TDA.Entities.Marcas mar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertMarca", ReplyAction="http://tempuri.org/ITDAService/InsertMarcaResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertMarcaAsync(TDA.Entities.Marcas mar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateMarca", ReplyAction="http://tempuri.org/ITDAService/UpdateMarcaResponse")]
        TDA.Entities.Resultado UpdateMarca(TDA.Entities.Marcas mar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateMarca", ReplyAction="http://tempuri.org/ITDAService/UpdateMarcaResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateMarcaAsync(TDA.Entities.Marcas mar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteMarca", ReplyAction="http://tempuri.org/ITDAService/DeleteMarcaResponse")]
        TDA.Entities.Resultado DeleteMarca(TDA.Entities.Marcas mar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteMarca", ReplyAction="http://tempuri.org/ITDAService/DeleteMarcaResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteMarcaAsync(TDA.Entities.Marcas mar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectMarca", ReplyAction="http://tempuri.org/ITDAService/SelectMarcaResponse")]
        TDA.Entities.Marcas[] SelectMarca(TDA.Entities.Marcas mar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectMarca", ReplyAction="http://tempuri.org/ITDAService/SelectMarcaResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Marcas[]> SelectMarcaAsync(TDA.Entities.Marcas mar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarMarcaID", ReplyAction="http://tempuri.org/ITDAService/BuscarMarcaIDResponse")]
        TDA.Entities.Marcas[] BuscarMarcaID(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarMarcaID", ReplyAction="http://tempuri.org/ITDAService/BuscarMarcaIDResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Marcas[]> BuscarMarcaIDAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertModelo", ReplyAction="http://tempuri.org/ITDAService/InsertModeloResponse")]
        TDA.Entities.Resultado InsertModelo(TDA.Entities.Modelos mod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertModelo", ReplyAction="http://tempuri.org/ITDAService/InsertModeloResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertModeloAsync(TDA.Entities.Modelos mod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateModelo", ReplyAction="http://tempuri.org/ITDAService/UpdateModeloResponse")]
        TDA.Entities.Resultado UpdateModelo(TDA.Entities.Modelos mod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateModelo", ReplyAction="http://tempuri.org/ITDAService/UpdateModeloResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateModeloAsync(TDA.Entities.Modelos mod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteModelo", ReplyAction="http://tempuri.org/ITDAService/DeleteModeloResponse")]
        TDA.Entities.Resultado DeleteModelo(TDA.Entities.Modelos mod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteModelo", ReplyAction="http://tempuri.org/ITDAService/DeleteModeloResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteModeloAsync(TDA.Entities.Modelos mod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectModelo", ReplyAction="http://tempuri.org/ITDAService/SelectModeloResponse")]
        TDA.Entities.Modelos[] SelectModelo(TDA.Entities.Modelos mod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectModelo", ReplyAction="http://tempuri.org/ITDAService/SelectModeloResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Modelos[]> SelectModeloAsync(TDA.Entities.Modelos mod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarModeloID", ReplyAction="http://tempuri.org/ITDAService/BuscarModeloIDResponse")]
        TDA.Entities.Modelos[] BuscarModeloID(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarModeloID", ReplyAction="http://tempuri.org/ITDAService/BuscarModeloIDResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Modelos[]> BuscarModeloIDAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertColor", ReplyAction="http://tempuri.org/ITDAService/InsertColorResponse")]
        TDA.Entities.Resultado InsertColor(TDA.Entities.Colores col);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertColor", ReplyAction="http://tempuri.org/ITDAService/InsertColorResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertColorAsync(TDA.Entities.Colores col);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateColor", ReplyAction="http://tempuri.org/ITDAService/UpdateColorResponse")]
        TDA.Entities.Resultado UpdateColor(TDA.Entities.Colores col);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateColor", ReplyAction="http://tempuri.org/ITDAService/UpdateColorResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateColorAsync(TDA.Entities.Colores col);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteColor", ReplyAction="http://tempuri.org/ITDAService/DeleteColorResponse")]
        TDA.Entities.Resultado DeleteColor(TDA.Entities.Colores col);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteColor", ReplyAction="http://tempuri.org/ITDAService/DeleteColorResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteColorAsync(TDA.Entities.Colores col);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectColor", ReplyAction="http://tempuri.org/ITDAService/SelectColorResponse")]
        TDA.Entities.Colores[] SelectColor(TDA.Entities.Colores col);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectColor", ReplyAction="http://tempuri.org/ITDAService/SelectColorResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Colores[]> SelectColorAsync(TDA.Entities.Colores col);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarColorID", ReplyAction="http://tempuri.org/ITDAService/BuscarColorIDResponse")]
        TDA.Entities.Colores[] BuscarColorID(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarColorID", ReplyAction="http://tempuri.org/ITDAService/BuscarColorIDResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Colores[]> BuscarColorIDAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertTipoProducto", ReplyAction="http://tempuri.org/ITDAService/InsertTipoProductoResponse")]
        TDA.Entities.Resultado InsertTipoProducto(TDA.Entities.TipoProductos tip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertTipoProducto", ReplyAction="http://tempuri.org/ITDAService/InsertTipoProductoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertTipoProductoAsync(TDA.Entities.TipoProductos tip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateTipoProducto", ReplyAction="http://tempuri.org/ITDAService/UpdateTipoProductoResponse")]
        TDA.Entities.Resultado UpdateTipoProducto(TDA.Entities.TipoProductos tip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateTipoProducto", ReplyAction="http://tempuri.org/ITDAService/UpdateTipoProductoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateTipoProductoAsync(TDA.Entities.TipoProductos tip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteTipoProducto", ReplyAction="http://tempuri.org/ITDAService/DeleteTipoProductoResponse")]
        TDA.Entities.Resultado DeleteTipoProducto(TDA.Entities.TipoProductos tip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteTipoProducto", ReplyAction="http://tempuri.org/ITDAService/DeleteTipoProductoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteTipoProductoAsync(TDA.Entities.TipoProductos tip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectTipoProducto", ReplyAction="http://tempuri.org/ITDAService/SelectTipoProductoResponse")]
        TDA.Entities.TipoProductos[] SelectTipoProducto(TDA.Entities.TipoProductos tip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectTipoProducto", ReplyAction="http://tempuri.org/ITDAService/SelectTipoProductoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.TipoProductos[]> SelectTipoProductoAsync(TDA.Entities.TipoProductos tip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarTipoProductoID", ReplyAction="http://tempuri.org/ITDAService/BuscarTipoProductoIDResponse")]
        TDA.Entities.TipoProductos[] BuscarTipoProductoID(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarTipoProductoID", ReplyAction="http://tempuri.org/ITDAService/BuscarTipoProductoIDResponse")]
        System.Threading.Tasks.Task<TDA.Entities.TipoProductos[]> BuscarTipoProductoIDAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertEmpleado", ReplyAction="http://tempuri.org/ITDAService/InsertEmpleadoResponse")]
        TDA.Entities.Resultado InsertEmpleado(TDA.Entities.Empleados emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertEmpleado", ReplyAction="http://tempuri.org/ITDAService/InsertEmpleadoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertEmpleadoAsync(TDA.Entities.Empleados emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateEmpleado", ReplyAction="http://tempuri.org/ITDAService/UpdateEmpleadoResponse")]
        TDA.Entities.Resultado UpdateEmpleado(TDA.Entities.Empleados emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateEmpleado", ReplyAction="http://tempuri.org/ITDAService/UpdateEmpleadoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateEmpleadoAsync(TDA.Entities.Empleados emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteEmpleado", ReplyAction="http://tempuri.org/ITDAService/DeleteEmpleadoResponse")]
        TDA.Entities.Resultado DeleteEmpleado(TDA.Entities.Empleados emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteEmpleado", ReplyAction="http://tempuri.org/ITDAService/DeleteEmpleadoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteEmpleadoAsync(TDA.Entities.Empleados emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectEmpleado", ReplyAction="http://tempuri.org/ITDAService/SelectEmpleadoResponse")]
        TDA.Entities.Empleados[] SelectEmpleado(TDA.Entities.Empleados emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectEmpleado", ReplyAction="http://tempuri.org/ITDAService/SelectEmpleadoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Empleados[]> SelectEmpleadoAsync(TDA.Entities.Empleados emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarEmpleadoID", ReplyAction="http://tempuri.org/ITDAService/BuscarEmpleadoIDResponse")]
        TDA.Entities.Empleados[] BuscarEmpleadoID(System.Nullable<long> ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarEmpleadoID", ReplyAction="http://tempuri.org/ITDAService/BuscarEmpleadoIDResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Empleados[]> BuscarEmpleadoIDAsync(System.Nullable<long> ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertVehiculo", ReplyAction="http://tempuri.org/ITDAService/InsertVehiculoResponse")]
        TDA.Entities.Resultado InsertVehiculo(TDA.Entities.Vehiculos veh);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertVehiculo", ReplyAction="http://tempuri.org/ITDAService/InsertVehiculoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertVehiculoAsync(TDA.Entities.Vehiculos veh);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateVehiculo", ReplyAction="http://tempuri.org/ITDAService/UpdateVehiculoResponse")]
        TDA.Entities.Resultado UpdateVehiculo(TDA.Entities.Vehiculos veh);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateVehiculo", ReplyAction="http://tempuri.org/ITDAService/UpdateVehiculoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateVehiculoAsync(TDA.Entities.Vehiculos veh);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectVehiculo", ReplyAction="http://tempuri.org/ITDAService/SelectVehiculoResponse")]
        TDA.Entities.Vehiculos[] SelectVehiculo(TDA.Entities.Vehiculos veh);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectVehiculo", ReplyAction="http://tempuri.org/ITDAService/SelectVehiculoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Vehiculos[]> SelectVehiculoAsync(TDA.Entities.Vehiculos veh);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarVehiculoID", ReplyAction="http://tempuri.org/ITDAService/BuscarVehiculoIDResponse")]
        TDA.Entities.Vehiculos[] BuscarVehiculoID(System.Nullable<long> ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarVehiculoID", ReplyAction="http://tempuri.org/ITDAService/BuscarVehiculoIDResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Vehiculos[]> BuscarVehiculoIDAsync(System.Nullable<long> ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertProveedor", ReplyAction="http://tempuri.org/ITDAService/InsertProveedorResponse")]
        TDA.Entities.Resultado InsertProveedor(TDA.Entities.Proveedores pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertProveedor", ReplyAction="http://tempuri.org/ITDAService/InsertProveedorResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertProveedorAsync(TDA.Entities.Proveedores pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateProveedor", ReplyAction="http://tempuri.org/ITDAService/UpdateProveedorResponse")]
        TDA.Entities.Resultado UpdateProveedor(TDA.Entities.Proveedores pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateProveedor", ReplyAction="http://tempuri.org/ITDAService/UpdateProveedorResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateProveedorAsync(TDA.Entities.Proveedores pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteProveedor", ReplyAction="http://tempuri.org/ITDAService/DeleteProveedorResponse")]
        TDA.Entities.Resultado DeleteProveedor(TDA.Entities.Proveedores pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteProveedor", ReplyAction="http://tempuri.org/ITDAService/DeleteProveedorResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteProveedorAsync(TDA.Entities.Proveedores pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectProveedor", ReplyAction="http://tempuri.org/ITDAService/SelectProveedorResponse")]
        TDA.Entities.Proveedores[] SelectProveedor(TDA.Entities.Proveedores pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectProveedor", ReplyAction="http://tempuri.org/ITDAService/SelectProveedorResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Proveedores[]> SelectProveedorAsync(TDA.Entities.Proveedores pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarProveedorID", ReplyAction="http://tempuri.org/ITDAService/BuscarProveedorIDResponse")]
        TDA.Entities.Proveedores[] BuscarProveedorID(System.Nullable<long> ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarProveedorID", ReplyAction="http://tempuri.org/ITDAService/BuscarProveedorIDResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Proveedores[]> BuscarProveedorIDAsync(System.Nullable<long> ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectDia", ReplyAction="http://tempuri.org/ITDAService/SelectDiaResponse")]
        TDA.Entities.Dias[] SelectDia();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectDia", ReplyAction="http://tempuri.org/ITDAService/SelectDiaResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Dias[]> SelectDiaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertProducto", ReplyAction="http://tempuri.org/ITDAService/InsertProductoResponse")]
        TDA.Entities.Resultado InsertProducto(TDA.Entities.Productos pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertProducto", ReplyAction="http://tempuri.org/ITDAService/InsertProductoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertProductoAsync(TDA.Entities.Productos pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateProducto", ReplyAction="http://tempuri.org/ITDAService/UpdateProductoResponse")]
        TDA.Entities.Resultado UpdateProducto(TDA.Entities.Productos pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateProducto", ReplyAction="http://tempuri.org/ITDAService/UpdateProductoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateProductoAsync(TDA.Entities.Productos pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteProducto", ReplyAction="http://tempuri.org/ITDAService/DeleteProductoResponse")]
        TDA.Entities.Resultado DeleteProducto(TDA.Entities.Productos pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteProducto", ReplyAction="http://tempuri.org/ITDAService/DeleteProductoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteProductoAsync(TDA.Entities.Productos pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectProducto", ReplyAction="http://tempuri.org/ITDAService/SelectProductoResponse")]
        TDA.Entities.Productos[] SelectProducto(TDA.Entities.Productos pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectProducto", ReplyAction="http://tempuri.org/ITDAService/SelectProductoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Productos[]> SelectProductoAsync(TDA.Entities.Productos pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarProductoID", ReplyAction="http://tempuri.org/ITDAService/BuscarProductoIDResponse")]
        TDA.Entities.Productos[] BuscarProductoID(System.Nullable<long> ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarProductoID", ReplyAction="http://tempuri.org/ITDAService/BuscarProductoIDResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Productos[]> BuscarProductoIDAsync(System.Nullable<long> ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertTipoMovimiento", ReplyAction="http://tempuri.org/ITDAService/InsertTipoMovimientoResponse")]
        TDA.Entities.Resultado InsertTipoMovimiento(TDA.Entities.TipoMovimientos tim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertTipoMovimiento", ReplyAction="http://tempuri.org/ITDAService/InsertTipoMovimientoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertTipoMovimientoAsync(TDA.Entities.TipoMovimientos tim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateTipoMovimiento", ReplyAction="http://tempuri.org/ITDAService/UpdateTipoMovimientoResponse")]
        TDA.Entities.Resultado UpdateTipoMovimiento(TDA.Entities.TipoMovimientos tim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateTipoMovimiento", ReplyAction="http://tempuri.org/ITDAService/UpdateTipoMovimientoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateTipoMovimientoAsync(TDA.Entities.TipoMovimientos tim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteTipoMovimiento", ReplyAction="http://tempuri.org/ITDAService/DeleteTipoMovimientoResponse")]
        TDA.Entities.Resultado DeleteTipoMovimiento(TDA.Entities.TipoMovimientos tim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteTipoMovimiento", ReplyAction="http://tempuri.org/ITDAService/DeleteTipoMovimientoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteTipoMovimientoAsync(TDA.Entities.TipoMovimientos tim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectTipoMovimiento", ReplyAction="http://tempuri.org/ITDAService/SelectTipoMovimientoResponse")]
        TDA.Entities.TipoMovimientos[] SelectTipoMovimiento();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectTipoMovimiento", ReplyAction="http://tempuri.org/ITDAService/SelectTipoMovimientoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.TipoMovimientos[]> SelectTipoMovimientoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertMovimiento", ReplyAction="http://tempuri.org/ITDAService/InsertMovimientoResponse")]
        TDA.Entities.Resultado InsertMovimiento(TDA.Entities.Movimientos mov);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertMovimiento", ReplyAction="http://tempuri.org/ITDAService/InsertMovimientoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertMovimientoAsync(TDA.Entities.Movimientos mov);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteMovimiento", ReplyAction="http://tempuri.org/ITDAService/DeleteMovimientoResponse")]
        TDA.Entities.Resultado DeleteMovimiento(TDA.Entities.Movimientos mov);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteMovimiento", ReplyAction="http://tempuri.org/ITDAService/DeleteMovimientoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteMovimientoAsync(TDA.Entities.Movimientos mov);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectMovimiento", ReplyAction="http://tempuri.org/ITDAService/SelectMovimientoResponse")]
        TDA.Entities.Movimientos[] SelectMovimiento();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectMovimiento", ReplyAction="http://tempuri.org/ITDAService/SelectMovimientoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Movimientos[]> SelectMovimientoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/InsertGrupoClienteResponse")]
        TDA.Entities.Resultado InsertGrupoCliente(TDA.Entities.GrupoClientes gcl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/InsertGrupoClienteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertGrupoClienteAsync(TDA.Entities.GrupoClientes gcl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/UpdateGrupoClienteResponse")]
        TDA.Entities.Resultado UpdateGrupoCliente(TDA.Entities.GrupoClientes gcl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/UpdateGrupoClienteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateGrupoClienteAsync(TDA.Entities.GrupoClientes gcl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/DeleteGrupoClienteResponse")]
        TDA.Entities.Resultado DeleteGrupoCliente(TDA.Entities.GrupoClientes gcl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/DeleteGrupoClienteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteGrupoClienteAsync(TDA.Entities.GrupoClientes gcl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/SelectGrupoClienteResponse")]
        TDA.Entities.GrupoClientes[] SelectGrupoCliente(TDA.Entities.GrupoClientes gcl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/SelectGrupoClienteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.GrupoClientes[]> SelectGrupoClienteAsync(TDA.Entities.GrupoClientes gcl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarGrupoClienteID", ReplyAction="http://tempuri.org/ITDAService/BuscarGrupoClienteIDResponse")]
        TDA.Entities.GrupoClientes[] BuscarGrupoClienteID(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarGrupoClienteID", ReplyAction="http://tempuri.org/ITDAService/BuscarGrupoClienteIDResponse")]
        System.Threading.Tasks.Task<TDA.Entities.GrupoClientes[]> BuscarGrupoClienteIDAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertCliente", ReplyAction="http://tempuri.org/ITDAService/InsertClienteResponse")]
        TDA.Entities.Resultado InsertCliente(TDA.Entities.Clientes cli);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertCliente", ReplyAction="http://tempuri.org/ITDAService/InsertClienteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertClienteAsync(TDA.Entities.Clientes cli);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateCliente", ReplyAction="http://tempuri.org/ITDAService/UpdateClienteResponse")]
        TDA.Entities.Resultado UpdateCliente(TDA.Entities.Clientes cli);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdateCliente", ReplyAction="http://tempuri.org/ITDAService/UpdateClienteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateClienteAsync(TDA.Entities.Clientes cli);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteCliente", ReplyAction="http://tempuri.org/ITDAService/DeleteClienteResponse")]
        TDA.Entities.Resultado DeleteCliente(TDA.Entities.Clientes cli);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteCliente", ReplyAction="http://tempuri.org/ITDAService/DeleteClienteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteClienteAsync(TDA.Entities.Clientes cli);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectCliente", ReplyAction="http://tempuri.org/ITDAService/SelectClienteResponse")]
        TDA.Entities.Clientes[] SelectCliente(TDA.Entities.Clientes cli);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectCliente", ReplyAction="http://tempuri.org/ITDAService/SelectClienteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Clientes[]> SelectClienteAsync(TDA.Entities.Clientes cli);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarClienteID", ReplyAction="http://tempuri.org/ITDAService/BuscarClienteIDResponse")]
        TDA.Entities.Clientes[] BuscarClienteID(System.Nullable<long> ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarClienteID", ReplyAction="http://tempuri.org/ITDAService/BuscarClienteIDResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Clientes[]> BuscarClienteIDAsync(System.Nullable<long> ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPaquete", ReplyAction="http://tempuri.org/ITDAService/InsertPaqueteResponse")]
        TDA.Entities.Resultado InsertPaquete(TDA.Entities.Paquetes paq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPaquete", ReplyAction="http://tempuri.org/ITDAService/InsertPaqueteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPaqueteAsync(TDA.Entities.Paquetes paq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdatePaquete", ReplyAction="http://tempuri.org/ITDAService/UpdatePaqueteResponse")]
        TDA.Entities.Resultado UpdatePaquete(TDA.Entities.Paquetes paq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdatePaquete", ReplyAction="http://tempuri.org/ITDAService/UpdatePaqueteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdatePaqueteAsync(TDA.Entities.Paquetes paq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPaquete", ReplyAction="http://tempuri.org/ITDAService/SelectPaqueteResponse")]
        TDA.Entities.Paquetes[] SelectPaquete(TDA.Entities.Paquetes paq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPaquete", ReplyAction="http://tempuri.org/ITDAService/SelectPaqueteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Paquetes[]> SelectPaqueteAsync(TDA.Entities.Paquetes paq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarPaqueteID", ReplyAction="http://tempuri.org/ITDAService/BuscarPaqueteIDResponse")]
        TDA.Entities.Paquetes[] BuscarPaqueteID(System.Nullable<long> ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarPaqueteID", ReplyAction="http://tempuri.org/ITDAService/BuscarPaqueteIDResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Paquetes[]> BuscarPaqueteIDAsync(System.Nullable<long> ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPaqueteDia", ReplyAction="http://tempuri.org/ITDAService/InsertPaqueteDiaResponse")]
        TDA.Entities.Resultado InsertPaqueteDia(TDA.Entities.PaqueteDias pqd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPaqueteDia", ReplyAction="http://tempuri.org/ITDAService/InsertPaqueteDiaResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPaqueteDiaAsync(TDA.Entities.PaqueteDias pqd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeletePaqueteDia", ReplyAction="http://tempuri.org/ITDAService/DeletePaqueteDiaResponse")]
        TDA.Entities.Resultado DeletePaqueteDia(TDA.Entities.PaqueteDias pqd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeletePaqueteDia", ReplyAction="http://tempuri.org/ITDAService/DeletePaqueteDiaResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeletePaqueteDiaAsync(TDA.Entities.PaqueteDias pqd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPaqueteDia", ReplyAction="http://tempuri.org/ITDAService/SelectPaqueteDiaResponse")]
        TDA.Entities.PaqueteDias[] SelectPaqueteDia();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPaqueteDia", ReplyAction="http://tempuri.org/ITDAService/SelectPaqueteDiaResponse")]
        System.Threading.Tasks.Task<TDA.Entities.PaqueteDias[]> SelectPaqueteDiaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPaqueteGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/InsertPaqueteGrupoClienteResponse")]
        TDA.Entities.Resultado InsertPaqueteGrupoCliente(TDA.Entities.PaqueteGrupoClientes pgc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPaqueteGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/InsertPaqueteGrupoClienteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPaqueteGrupoClienteAsync(TDA.Entities.PaqueteGrupoClientes pgc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeletePaqueteGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/DeletePaqueteGrupoClienteResponse")]
        TDA.Entities.Resultado DeletePaqueteGrupoCliente(TDA.Entities.PaqueteGrupoClientes pgc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeletePaqueteGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/DeletePaqueteGrupoClienteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeletePaqueteGrupoClienteAsync(TDA.Entities.PaqueteGrupoClientes pgc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPaqueteGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/SelectPaqueteGrupoClienteResponse")]
        TDA.Entities.PaqueteGrupoClientes[] SelectPaqueteGrupoCliente();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPaqueteGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/SelectPaqueteGrupoClienteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.PaqueteGrupoClientes[]> SelectPaqueteGrupoClienteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPaqueteProducto", ReplyAction="http://tempuri.org/ITDAService/InsertPaqueteProductoResponse")]
        TDA.Entities.Resultado InsertPaqueteProducto(TDA.Entities.PaqueteProductos ppr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPaqueteProducto", ReplyAction="http://tempuri.org/ITDAService/InsertPaqueteProductoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPaqueteProductoAsync(TDA.Entities.PaqueteProductos ppr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeletePaqueteProducto", ReplyAction="http://tempuri.org/ITDAService/DeletePaqueteProductoResponse")]
        TDA.Entities.Resultado DeletePaqueteProducto(TDA.Entities.PaqueteProductos ppr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeletePaqueteProducto", ReplyAction="http://tempuri.org/ITDAService/DeletePaqueteProductoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeletePaqueteProductoAsync(TDA.Entities.PaqueteProductos ppr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPaqueteProducto", ReplyAction="http://tempuri.org/ITDAService/SelectPaqueteProductoResponse")]
        TDA.Entities.PaqueteProductos[] SelectPaqueteProducto();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPaqueteProducto", ReplyAction="http://tempuri.org/ITDAService/SelectPaqueteProductoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.PaqueteProductos[]> SelectPaqueteProductoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPromocion", ReplyAction="http://tempuri.org/ITDAService/InsertPromocionResponse")]
        TDA.Entities.Resultado InsertPromocion(TDA.Entities.Promociones pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPromocion", ReplyAction="http://tempuri.org/ITDAService/InsertPromocionResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPromocionAsync(TDA.Entities.Promociones pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdatePromocion", ReplyAction="http://tempuri.org/ITDAService/UpdatePromocionResponse")]
        TDA.Entities.Resultado UpdatePromocion(TDA.Entities.Promociones pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/UpdatePromocion", ReplyAction="http://tempuri.org/ITDAService/UpdatePromocionResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdatePromocionAsync(TDA.Entities.Promociones pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPromocion", ReplyAction="http://tempuri.org/ITDAService/SelectPromocionResponse")]
        TDA.Entities.Promociones[] SelectPromocion(TDA.Entities.Promociones pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPromocion", ReplyAction="http://tempuri.org/ITDAService/SelectPromocionResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Promociones[]> SelectPromocionAsync(TDA.Entities.Promociones pro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarPromocionID", ReplyAction="http://tempuri.org/ITDAService/BuscarPromocionIDResponse")]
        TDA.Entities.Promociones[] BuscarPromocionID(System.Nullable<long> ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/BuscarPromocionID", ReplyAction="http://tempuri.org/ITDAService/BuscarPromocionIDResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Promociones[]> BuscarPromocionIDAsync(System.Nullable<long> ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPromocionDia", ReplyAction="http://tempuri.org/ITDAService/InsertPromocionDiaResponse")]
        TDA.Entities.Resultado InsertPromocionDia(TDA.Entities.PromocionDias prd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPromocionDia", ReplyAction="http://tempuri.org/ITDAService/InsertPromocionDiaResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPromocionDiaAsync(TDA.Entities.PromocionDias prd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeletePromocionDia", ReplyAction="http://tempuri.org/ITDAService/DeletePromocionDiaResponse")]
        TDA.Entities.Resultado DeletePromocionDia(TDA.Entities.PromocionDias prd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeletePromocionDia", ReplyAction="http://tempuri.org/ITDAService/DeletePromocionDiaResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeletePromocionDiaAsync(TDA.Entities.PromocionDias prd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPromocionDia", ReplyAction="http://tempuri.org/ITDAService/SelectPromocionDiaResponse")]
        TDA.Entities.PromocionDias[] SelectPromocionDia();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPromocionDia", ReplyAction="http://tempuri.org/ITDAService/SelectPromocionDiaResponse")]
        System.Threading.Tasks.Task<TDA.Entities.PromocionDias[]> SelectPromocionDiaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPromocionPaquete", ReplyAction="http://tempuri.org/ITDAService/InsertPromocionPaqueteResponse")]
        TDA.Entities.Resultado InsertPromocionPaquete(TDA.Entities.PromocionPaquetes prp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPromocionPaquete", ReplyAction="http://tempuri.org/ITDAService/InsertPromocionPaqueteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPromocionPaqueteAsync(TDA.Entities.PromocionPaquetes prp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeletePromocionPaquete", ReplyAction="http://tempuri.org/ITDAService/DeletePromocionPaqueteResponse")]
        TDA.Entities.Resultado DeletePromocionPaquete(TDA.Entities.PromocionPaquetes prp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeletePromocionPaquete", ReplyAction="http://tempuri.org/ITDAService/DeletePromocionPaqueteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeletePromocionPaqueteAsync(TDA.Entities.PromocionPaquetes prp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPromocionPaquete", ReplyAction="http://tempuri.org/ITDAService/SelectPromocionPaqueteResponse")]
        TDA.Entities.PromocionPaquetes[] SelectPromocionPaquete();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPromocionPaquete", ReplyAction="http://tempuri.org/ITDAService/SelectPromocionPaqueteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.PromocionPaquetes[]> SelectPromocionPaqueteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPromocionTipoProducto", ReplyAction="http://tempuri.org/ITDAService/InsertPromocionTipoProductoResponse")]
        TDA.Entities.Resultado InsertPromocionTipoProducto(TDA.Entities.PromocionTipoProductos ptp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPromocionTipoProducto", ReplyAction="http://tempuri.org/ITDAService/InsertPromocionTipoProductoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPromocionTipoProductoAsync(TDA.Entities.PromocionTipoProductos ptp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeletePromocionTipoProducto", ReplyAction="http://tempuri.org/ITDAService/DeletePromocionTipoProductoResponse")]
        TDA.Entities.Resultado DeletePromocionTipoProducto(TDA.Entities.PromocionTipoProductos ptp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeletePromocionTipoProducto", ReplyAction="http://tempuri.org/ITDAService/DeletePromocionTipoProductoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeletePromocionTipoProductoAsync(TDA.Entities.PromocionTipoProductos ptp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPromocionTipoProducto", ReplyAction="http://tempuri.org/ITDAService/SelectPromocionTipoProductoResponse")]
        TDA.Entities.PromocionTipoProductos[] SelectPromocionTipoProducto();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPromocionTipoProducto", ReplyAction="http://tempuri.org/ITDAService/SelectPromocionTipoProductoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.PromocionTipoProductos[]> SelectPromocionTipoProductoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPromocionProducto", ReplyAction="http://tempuri.org/ITDAService/InsertPromocionProductoResponse")]
        TDA.Entities.Resultado InsertPromocionProducto(TDA.Entities.PromocionProductos ppr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPromocionProducto", ReplyAction="http://tempuri.org/ITDAService/InsertPromocionProductoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPromocionProductoAsync(TDA.Entities.PromocionProductos ppr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeletePromocionProducto", ReplyAction="http://tempuri.org/ITDAService/DeletePromocionProductoResponse")]
        TDA.Entities.Resultado DeletePromocionProducto(TDA.Entities.PromocionProductos ppr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeletePromocionProducto", ReplyAction="http://tempuri.org/ITDAService/DeletePromocionProductoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeletePromocionProductoAsync(TDA.Entities.PromocionProductos ppr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPromocionProducto", ReplyAction="http://tempuri.org/ITDAService/SelectPromocionProductoResponse")]
        TDA.Entities.PromocionProductos[] SelectPromocionProducto();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPromocionProducto", ReplyAction="http://tempuri.org/ITDAService/SelectPromocionProductoResponse")]
        System.Threading.Tasks.Task<TDA.Entities.PromocionProductos[]> SelectPromocionProductoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPromocionGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/InsertPromocionGrupoClienteResponse")]
        TDA.Entities.Resultado InsertPromocionGrupoCliente(TDA.Entities.PromocionGrupoClientes ppr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertPromocionGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/InsertPromocionGrupoClienteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPromocionGrupoClienteAsync(TDA.Entities.PromocionGrupoClientes ppr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeletePromocionGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/DeletePromocionGrupoClienteResponse")]
        TDA.Entities.Resultado DeletePromocionGrupoCliente(TDA.Entities.PromocionGrupoClientes ppr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeletePromocionGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/DeletePromocionGrupoClienteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeletePromocionGrupoClienteAsync(TDA.Entities.PromocionGrupoClientes ppr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPromocionGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/SelectPromocionGrupoClienteResponse")]
        TDA.Entities.PromocionGrupoClientes[] SelectPromocionGrupoCliente();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectPromocionGrupoCliente", ReplyAction="http://tempuri.org/ITDAService/SelectPromocionGrupoClienteResponse")]
        System.Threading.Tasks.Task<TDA.Entities.PromocionGrupoClientes[]> SelectPromocionGrupoClienteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertVenta", ReplyAction="http://tempuri.org/ITDAService/InsertVentaResponse")]
        TDA.Entities.Resultado InsertVenta(TDA.Entities.Ventas ven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertVenta", ReplyAction="http://tempuri.org/ITDAService/InsertVentaResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertVentaAsync(TDA.Entities.Ventas ven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteVenta", ReplyAction="http://tempuri.org/ITDAService/DeleteVentaResponse")]
        TDA.Entities.Resultado DeleteVenta(TDA.Entities.Ventas ven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteVenta", ReplyAction="http://tempuri.org/ITDAService/DeleteVentaResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteVentaAsync(TDA.Entities.Ventas ven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectVenta", ReplyAction="http://tempuri.org/ITDAService/SelectVentaResponse")]
        TDA.Entities.Ventas[] SelectVenta();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectVenta", ReplyAction="http://tempuri.org/ITDAService/SelectVentaResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Ventas[]> SelectVentaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertVentaDetalle", ReplyAction="http://tempuri.org/ITDAService/InsertVentaDetalleResponse")]
        TDA.Entities.Resultado InsertVentaDetalle(TDA.Entities.VentaDetalles ved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertVentaDetalle", ReplyAction="http://tempuri.org/ITDAService/InsertVentaDetalleResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertVentaDetalleAsync(TDA.Entities.VentaDetalles ved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteVentaDetalle", ReplyAction="http://tempuri.org/ITDAService/DeleteVentaDetalleResponse")]
        TDA.Entities.Resultado DeleteVentaDetalle(TDA.Entities.VentaDetalles ved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteVentaDetalle", ReplyAction="http://tempuri.org/ITDAService/DeleteVentaDetalleResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteVentaDetalleAsync(TDA.Entities.VentaDetalles ved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectVentaDetalle", ReplyAction="http://tempuri.org/ITDAService/SelectVentaDetalleResponse")]
        TDA.Entities.VentaDetalles[] SelectVentaDetalle();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectVentaDetalle", ReplyAction="http://tempuri.org/ITDAService/SelectVentaDetalleResponse")]
        System.Threading.Tasks.Task<TDA.Entities.VentaDetalles[]> SelectVentaDetalleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertVentaDia", ReplyAction="http://tempuri.org/ITDAService/InsertVentaDiaResponse")]
        TDA.Entities.Resultado InsertVentaDia(TDA.Entities.VentaDias ved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertVentaDia", ReplyAction="http://tempuri.org/ITDAService/InsertVentaDiaResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertVentaDiaAsync(TDA.Entities.VentaDias ved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteVentaDia", ReplyAction="http://tempuri.org/ITDAService/DeleteVentaDiaResponse")]
        TDA.Entities.Resultado DeleteVentaDia(TDA.Entities.VentaDias ved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/DeleteVentaDia", ReplyAction="http://tempuri.org/ITDAService/DeleteVentaDiaResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteVentaDiaAsync(TDA.Entities.VentaDias ved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectVentaDia", ReplyAction="http://tempuri.org/ITDAService/SelectVentaDiaResponse")]
        TDA.Entities.VentaDias[] SelectVentaDia();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectVentaDia", ReplyAction="http://tempuri.org/ITDAService/SelectVentaDiaResponse")]
        System.Threading.Tasks.Task<TDA.Entities.VentaDias[]> SelectVentaDiaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertLog", ReplyAction="http://tempuri.org/ITDAService/InsertLogResponse")]
        TDA.Entities.Resultado InsertLog(TDA.Entities.Log log);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/InsertLog", ReplyAction="http://tempuri.org/ITDAService/InsertLogResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertLogAsync(TDA.Entities.Log log);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectLog", ReplyAction="http://tempuri.org/ITDAService/SelectLogResponse")]
        TDA.Entities.Log[] SelectLog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDAService/SelectLog", ReplyAction="http://tempuri.org/ITDAService/SelectLogResponse")]
        System.Threading.Tasks.Task<TDA.Entities.Log[]> SelectLogAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITDAServiceChannel : TDAWPF.TDAService.ITDAService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TDAServiceClient : System.ServiceModel.ClientBase<TDAWPF.TDAService.ITDAService>, TDAWPF.TDAService.ITDAService {
        
        public TDAServiceClient() {
        }
        
        public TDAServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TDAServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TDAServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TDAServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TDA.Entities.Configuraciones[] SelectConfiguracion() {
            return base.Channel.SelectConfiguracion();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Configuraciones[]> SelectConfiguracionAsync() {
            return base.Channel.SelectConfiguracionAsync();
        }
        
        public TDA.Entities.Roles[] SelectRol() {
            return base.Channel.SelectRol();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Roles[]> SelectRolAsync() {
            return base.Channel.SelectRolAsync();
        }
        
        public TDA.Entities.Paginas[] SelectPagina() {
            return base.Channel.SelectPagina();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Paginas[]> SelectPaginaAsync() {
            return base.Channel.SelectPaginaAsync();
        }
        
        public TDA.Entities.RolPaginas[] SelectRolPagina() {
            return base.Channel.SelectRolPagina();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.RolPaginas[]> SelectRolPaginaAsync() {
            return base.Channel.SelectRolPaginaAsync();
        }
        
        public TDA.Entities.BaseSalarios[] SelectBaseSalario() {
            return base.Channel.SelectBaseSalario();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.BaseSalarios[]> SelectBaseSalarioAsync() {
            return base.Channel.SelectBaseSalarioAsync();
        }
        
        public TDA.Entities.TipoIdentificaciones[] SelectTipoIdentificacion() {
            return base.Channel.SelectTipoIdentificacion();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.TipoIdentificaciones[]> SelectTipoIdentificacionAsync() {
            return base.Channel.SelectTipoIdentificacionAsync();
        }
        
        public TDA.Entities.Resultado InsertUsuario(TDA.Entities.Usuarios usu) {
            return base.Channel.InsertUsuario(usu);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertUsuarioAsync(TDA.Entities.Usuarios usu) {
            return base.Channel.InsertUsuarioAsync(usu);
        }
        
        public TDA.Entities.Resultado UpdateUsuario(TDA.Entities.Usuarios usu) {
            return base.Channel.UpdateUsuario(usu);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateUsuarioAsync(TDA.Entities.Usuarios usu) {
            return base.Channel.UpdateUsuarioAsync(usu);
        }
        
        public TDA.Entities.Usuarios[] SelectUsuario(TDA.Entities.Usuarios usu) {
            return base.Channel.SelectUsuario(usu);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Usuarios[]> SelectUsuarioAsync(TDA.Entities.Usuarios usu) {
            return base.Channel.SelectUsuarioAsync(usu);
        }
        
        public TDA.Entities.Usuarios[] BuscarUsuarioID(long ID) {
            return base.Channel.BuscarUsuarioID(ID);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Usuarios[]> BuscarUsuarioIDAsync(long ID) {
            return base.Channel.BuscarUsuarioIDAsync(ID);
        }
        
        public TDA.Entities.Resultado InsertPais(TDA.Entities.Paises pai) {
            return base.Channel.InsertPais(pai);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPaisAsync(TDA.Entities.Paises pai) {
            return base.Channel.InsertPaisAsync(pai);
        }
        
        public TDA.Entities.Resultado UpdatePais(TDA.Entities.Paises pai) {
            return base.Channel.UpdatePais(pai);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdatePaisAsync(TDA.Entities.Paises pai) {
            return base.Channel.UpdatePaisAsync(pai);
        }
        
        public TDA.Entities.Resultado DeletePais(TDA.Entities.Paises pai) {
            return base.Channel.DeletePais(pai);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeletePaisAsync(TDA.Entities.Paises pai) {
            return base.Channel.DeletePaisAsync(pai);
        }
        
        public TDA.Entities.Paises[] SelectPais(TDA.Entities.Paises pai) {
            return base.Channel.SelectPais(pai);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Paises[]> SelectPaisAsync(TDA.Entities.Paises pai) {
            return base.Channel.SelectPaisAsync(pai);
        }
        
        public TDA.Entities.Paises[] BuscarPaisID(long ID) {
            return base.Channel.BuscarPaisID(ID);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Paises[]> BuscarPaisIDAsync(long ID) {
            return base.Channel.BuscarPaisIDAsync(ID);
        }
        
        public TDA.Entities.Resultado InsertEstado(TDA.Entities.Estados est) {
            return base.Channel.InsertEstado(est);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertEstadoAsync(TDA.Entities.Estados est) {
            return base.Channel.InsertEstadoAsync(est);
        }
        
        public TDA.Entities.Resultado UpdateEstado(TDA.Entities.Estados est) {
            return base.Channel.UpdateEstado(est);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateEstadoAsync(TDA.Entities.Estados est) {
            return base.Channel.UpdateEstadoAsync(est);
        }
        
        public TDA.Entities.Estados[] SelectEstado(TDA.Entities.Estados est) {
            return base.Channel.SelectEstado(est);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Estados[]> SelectEstadoAsync(TDA.Entities.Estados est) {
            return base.Channel.SelectEstadoAsync(est);
        }
        
        public TDA.Entities.Estados[] BuscarEstadoID(long ID) {
            return base.Channel.BuscarEstadoID(ID);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Estados[]> BuscarEstadoIDAsync(long ID) {
            return base.Channel.BuscarEstadoIDAsync(ID);
        }
        
        public TDA.Entities.Resultado InsertMarca(TDA.Entities.Marcas mar) {
            return base.Channel.InsertMarca(mar);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertMarcaAsync(TDA.Entities.Marcas mar) {
            return base.Channel.InsertMarcaAsync(mar);
        }
        
        public TDA.Entities.Resultado UpdateMarca(TDA.Entities.Marcas mar) {
            return base.Channel.UpdateMarca(mar);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateMarcaAsync(TDA.Entities.Marcas mar) {
            return base.Channel.UpdateMarcaAsync(mar);
        }
        
        public TDA.Entities.Resultado DeleteMarca(TDA.Entities.Marcas mar) {
            return base.Channel.DeleteMarca(mar);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteMarcaAsync(TDA.Entities.Marcas mar) {
            return base.Channel.DeleteMarcaAsync(mar);
        }
        
        public TDA.Entities.Marcas[] SelectMarca(TDA.Entities.Marcas mar) {
            return base.Channel.SelectMarca(mar);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Marcas[]> SelectMarcaAsync(TDA.Entities.Marcas mar) {
            return base.Channel.SelectMarcaAsync(mar);
        }
        
        public TDA.Entities.Marcas[] BuscarMarcaID(long ID) {
            return base.Channel.BuscarMarcaID(ID);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Marcas[]> BuscarMarcaIDAsync(long ID) {
            return base.Channel.BuscarMarcaIDAsync(ID);
        }
        
        public TDA.Entities.Resultado InsertModelo(TDA.Entities.Modelos mod) {
            return base.Channel.InsertModelo(mod);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertModeloAsync(TDA.Entities.Modelos mod) {
            return base.Channel.InsertModeloAsync(mod);
        }
        
        public TDA.Entities.Resultado UpdateModelo(TDA.Entities.Modelos mod) {
            return base.Channel.UpdateModelo(mod);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateModeloAsync(TDA.Entities.Modelos mod) {
            return base.Channel.UpdateModeloAsync(mod);
        }
        
        public TDA.Entities.Resultado DeleteModelo(TDA.Entities.Modelos mod) {
            return base.Channel.DeleteModelo(mod);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteModeloAsync(TDA.Entities.Modelos mod) {
            return base.Channel.DeleteModeloAsync(mod);
        }
        
        public TDA.Entities.Modelos[] SelectModelo(TDA.Entities.Modelos mod) {
            return base.Channel.SelectModelo(mod);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Modelos[]> SelectModeloAsync(TDA.Entities.Modelos mod) {
            return base.Channel.SelectModeloAsync(mod);
        }
        
        public TDA.Entities.Modelos[] BuscarModeloID(long ID) {
            return base.Channel.BuscarModeloID(ID);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Modelos[]> BuscarModeloIDAsync(long ID) {
            return base.Channel.BuscarModeloIDAsync(ID);
        }
        
        public TDA.Entities.Resultado InsertColor(TDA.Entities.Colores col) {
            return base.Channel.InsertColor(col);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertColorAsync(TDA.Entities.Colores col) {
            return base.Channel.InsertColorAsync(col);
        }
        
        public TDA.Entities.Resultado UpdateColor(TDA.Entities.Colores col) {
            return base.Channel.UpdateColor(col);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateColorAsync(TDA.Entities.Colores col) {
            return base.Channel.UpdateColorAsync(col);
        }
        
        public TDA.Entities.Resultado DeleteColor(TDA.Entities.Colores col) {
            return base.Channel.DeleteColor(col);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteColorAsync(TDA.Entities.Colores col) {
            return base.Channel.DeleteColorAsync(col);
        }
        
        public TDA.Entities.Colores[] SelectColor(TDA.Entities.Colores col) {
            return base.Channel.SelectColor(col);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Colores[]> SelectColorAsync(TDA.Entities.Colores col) {
            return base.Channel.SelectColorAsync(col);
        }
        
        public TDA.Entities.Colores[] BuscarColorID(long ID) {
            return base.Channel.BuscarColorID(ID);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Colores[]> BuscarColorIDAsync(long ID) {
            return base.Channel.BuscarColorIDAsync(ID);
        }
        
        public TDA.Entities.Resultado InsertTipoProducto(TDA.Entities.TipoProductos tip) {
            return base.Channel.InsertTipoProducto(tip);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertTipoProductoAsync(TDA.Entities.TipoProductos tip) {
            return base.Channel.InsertTipoProductoAsync(tip);
        }
        
        public TDA.Entities.Resultado UpdateTipoProducto(TDA.Entities.TipoProductos tip) {
            return base.Channel.UpdateTipoProducto(tip);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateTipoProductoAsync(TDA.Entities.TipoProductos tip) {
            return base.Channel.UpdateTipoProductoAsync(tip);
        }
        
        public TDA.Entities.Resultado DeleteTipoProducto(TDA.Entities.TipoProductos tip) {
            return base.Channel.DeleteTipoProducto(tip);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteTipoProductoAsync(TDA.Entities.TipoProductos tip) {
            return base.Channel.DeleteTipoProductoAsync(tip);
        }
        
        public TDA.Entities.TipoProductos[] SelectTipoProducto(TDA.Entities.TipoProductos tip) {
            return base.Channel.SelectTipoProducto(tip);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.TipoProductos[]> SelectTipoProductoAsync(TDA.Entities.TipoProductos tip) {
            return base.Channel.SelectTipoProductoAsync(tip);
        }
        
        public TDA.Entities.TipoProductos[] BuscarTipoProductoID(long ID) {
            return base.Channel.BuscarTipoProductoID(ID);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.TipoProductos[]> BuscarTipoProductoIDAsync(long ID) {
            return base.Channel.BuscarTipoProductoIDAsync(ID);
        }
        
        public TDA.Entities.Resultado InsertEmpleado(TDA.Entities.Empleados emp) {
            return base.Channel.InsertEmpleado(emp);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertEmpleadoAsync(TDA.Entities.Empleados emp) {
            return base.Channel.InsertEmpleadoAsync(emp);
        }
        
        public TDA.Entities.Resultado UpdateEmpleado(TDA.Entities.Empleados emp) {
            return base.Channel.UpdateEmpleado(emp);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateEmpleadoAsync(TDA.Entities.Empleados emp) {
            return base.Channel.UpdateEmpleadoAsync(emp);
        }
        
        public TDA.Entities.Resultado DeleteEmpleado(TDA.Entities.Empleados emp) {
            return base.Channel.DeleteEmpleado(emp);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteEmpleadoAsync(TDA.Entities.Empleados emp) {
            return base.Channel.DeleteEmpleadoAsync(emp);
        }
        
        public TDA.Entities.Empleados[] SelectEmpleado(TDA.Entities.Empleados emp) {
            return base.Channel.SelectEmpleado(emp);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Empleados[]> SelectEmpleadoAsync(TDA.Entities.Empleados emp) {
            return base.Channel.SelectEmpleadoAsync(emp);
        }
        
        public TDA.Entities.Empleados[] BuscarEmpleadoID(System.Nullable<long> ID) {
            return base.Channel.BuscarEmpleadoID(ID);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Empleados[]> BuscarEmpleadoIDAsync(System.Nullable<long> ID) {
            return base.Channel.BuscarEmpleadoIDAsync(ID);
        }
        
        public TDA.Entities.Resultado InsertVehiculo(TDA.Entities.Vehiculos veh) {
            return base.Channel.InsertVehiculo(veh);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertVehiculoAsync(TDA.Entities.Vehiculos veh) {
            return base.Channel.InsertVehiculoAsync(veh);
        }
        
        public TDA.Entities.Resultado UpdateVehiculo(TDA.Entities.Vehiculos veh) {
            return base.Channel.UpdateVehiculo(veh);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateVehiculoAsync(TDA.Entities.Vehiculos veh) {
            return base.Channel.UpdateVehiculoAsync(veh);
        }
        
        public TDA.Entities.Vehiculos[] SelectVehiculo(TDA.Entities.Vehiculos veh) {
            return base.Channel.SelectVehiculo(veh);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Vehiculos[]> SelectVehiculoAsync(TDA.Entities.Vehiculos veh) {
            return base.Channel.SelectVehiculoAsync(veh);
        }
        
        public TDA.Entities.Vehiculos[] BuscarVehiculoID(System.Nullable<long> ID) {
            return base.Channel.BuscarVehiculoID(ID);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Vehiculos[]> BuscarVehiculoIDAsync(System.Nullable<long> ID) {
            return base.Channel.BuscarVehiculoIDAsync(ID);
        }
        
        public TDA.Entities.Resultado InsertProveedor(TDA.Entities.Proveedores pro) {
            return base.Channel.InsertProveedor(pro);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertProveedorAsync(TDA.Entities.Proveedores pro) {
            return base.Channel.InsertProveedorAsync(pro);
        }
        
        public TDA.Entities.Resultado UpdateProveedor(TDA.Entities.Proveedores pro) {
            return base.Channel.UpdateProveedor(pro);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateProveedorAsync(TDA.Entities.Proveedores pro) {
            return base.Channel.UpdateProveedorAsync(pro);
        }
        
        public TDA.Entities.Resultado DeleteProveedor(TDA.Entities.Proveedores pro) {
            return base.Channel.DeleteProveedor(pro);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteProveedorAsync(TDA.Entities.Proveedores pro) {
            return base.Channel.DeleteProveedorAsync(pro);
        }
        
        public TDA.Entities.Proveedores[] SelectProveedor(TDA.Entities.Proveedores pro) {
            return base.Channel.SelectProveedor(pro);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Proveedores[]> SelectProveedorAsync(TDA.Entities.Proveedores pro) {
            return base.Channel.SelectProveedorAsync(pro);
        }
        
        public TDA.Entities.Proveedores[] BuscarProveedorID(System.Nullable<long> ID) {
            return base.Channel.BuscarProveedorID(ID);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Proveedores[]> BuscarProveedorIDAsync(System.Nullable<long> ID) {
            return base.Channel.BuscarProveedorIDAsync(ID);
        }
        
        public TDA.Entities.Dias[] SelectDia() {
            return base.Channel.SelectDia();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Dias[]> SelectDiaAsync() {
            return base.Channel.SelectDiaAsync();
        }
        
        public TDA.Entities.Resultado InsertProducto(TDA.Entities.Productos pro) {
            return base.Channel.InsertProducto(pro);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertProductoAsync(TDA.Entities.Productos pro) {
            return base.Channel.InsertProductoAsync(pro);
        }
        
        public TDA.Entities.Resultado UpdateProducto(TDA.Entities.Productos pro) {
            return base.Channel.UpdateProducto(pro);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateProductoAsync(TDA.Entities.Productos pro) {
            return base.Channel.UpdateProductoAsync(pro);
        }
        
        public TDA.Entities.Resultado DeleteProducto(TDA.Entities.Productos pro) {
            return base.Channel.DeleteProducto(pro);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteProductoAsync(TDA.Entities.Productos pro) {
            return base.Channel.DeleteProductoAsync(pro);
        }
        
        public TDA.Entities.Productos[] SelectProducto(TDA.Entities.Productos pro) {
            return base.Channel.SelectProducto(pro);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Productos[]> SelectProductoAsync(TDA.Entities.Productos pro) {
            return base.Channel.SelectProductoAsync(pro);
        }
        
        public TDA.Entities.Productos[] BuscarProductoID(System.Nullable<long> ID) {
            return base.Channel.BuscarProductoID(ID);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Productos[]> BuscarProductoIDAsync(System.Nullable<long> ID) {
            return base.Channel.BuscarProductoIDAsync(ID);
        }
        
        public TDA.Entities.Resultado InsertTipoMovimiento(TDA.Entities.TipoMovimientos tim) {
            return base.Channel.InsertTipoMovimiento(tim);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertTipoMovimientoAsync(TDA.Entities.TipoMovimientos tim) {
            return base.Channel.InsertTipoMovimientoAsync(tim);
        }
        
        public TDA.Entities.Resultado UpdateTipoMovimiento(TDA.Entities.TipoMovimientos tim) {
            return base.Channel.UpdateTipoMovimiento(tim);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateTipoMovimientoAsync(TDA.Entities.TipoMovimientos tim) {
            return base.Channel.UpdateTipoMovimientoAsync(tim);
        }
        
        public TDA.Entities.Resultado DeleteTipoMovimiento(TDA.Entities.TipoMovimientos tim) {
            return base.Channel.DeleteTipoMovimiento(tim);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteTipoMovimientoAsync(TDA.Entities.TipoMovimientos tim) {
            return base.Channel.DeleteTipoMovimientoAsync(tim);
        }
        
        public TDA.Entities.TipoMovimientos[] SelectTipoMovimiento() {
            return base.Channel.SelectTipoMovimiento();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.TipoMovimientos[]> SelectTipoMovimientoAsync() {
            return base.Channel.SelectTipoMovimientoAsync();
        }
        
        public TDA.Entities.Resultado InsertMovimiento(TDA.Entities.Movimientos mov) {
            return base.Channel.InsertMovimiento(mov);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertMovimientoAsync(TDA.Entities.Movimientos mov) {
            return base.Channel.InsertMovimientoAsync(mov);
        }
        
        public TDA.Entities.Resultado DeleteMovimiento(TDA.Entities.Movimientos mov) {
            return base.Channel.DeleteMovimiento(mov);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteMovimientoAsync(TDA.Entities.Movimientos mov) {
            return base.Channel.DeleteMovimientoAsync(mov);
        }
        
        public TDA.Entities.Movimientos[] SelectMovimiento() {
            return base.Channel.SelectMovimiento();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Movimientos[]> SelectMovimientoAsync() {
            return base.Channel.SelectMovimientoAsync();
        }
        
        public TDA.Entities.Resultado InsertGrupoCliente(TDA.Entities.GrupoClientes gcl) {
            return base.Channel.InsertGrupoCliente(gcl);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertGrupoClienteAsync(TDA.Entities.GrupoClientes gcl) {
            return base.Channel.InsertGrupoClienteAsync(gcl);
        }
        
        public TDA.Entities.Resultado UpdateGrupoCliente(TDA.Entities.GrupoClientes gcl) {
            return base.Channel.UpdateGrupoCliente(gcl);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateGrupoClienteAsync(TDA.Entities.GrupoClientes gcl) {
            return base.Channel.UpdateGrupoClienteAsync(gcl);
        }
        
        public TDA.Entities.Resultado DeleteGrupoCliente(TDA.Entities.GrupoClientes gcl) {
            return base.Channel.DeleteGrupoCliente(gcl);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteGrupoClienteAsync(TDA.Entities.GrupoClientes gcl) {
            return base.Channel.DeleteGrupoClienteAsync(gcl);
        }
        
        public TDA.Entities.GrupoClientes[] SelectGrupoCliente(TDA.Entities.GrupoClientes gcl) {
            return base.Channel.SelectGrupoCliente(gcl);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.GrupoClientes[]> SelectGrupoClienteAsync(TDA.Entities.GrupoClientes gcl) {
            return base.Channel.SelectGrupoClienteAsync(gcl);
        }
        
        public TDA.Entities.GrupoClientes[] BuscarGrupoClienteID(long ID) {
            return base.Channel.BuscarGrupoClienteID(ID);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.GrupoClientes[]> BuscarGrupoClienteIDAsync(long ID) {
            return base.Channel.BuscarGrupoClienteIDAsync(ID);
        }
        
        public TDA.Entities.Resultado InsertCliente(TDA.Entities.Clientes cli) {
            return base.Channel.InsertCliente(cli);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertClienteAsync(TDA.Entities.Clientes cli) {
            return base.Channel.InsertClienteAsync(cli);
        }
        
        public TDA.Entities.Resultado UpdateCliente(TDA.Entities.Clientes cli) {
            return base.Channel.UpdateCliente(cli);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdateClienteAsync(TDA.Entities.Clientes cli) {
            return base.Channel.UpdateClienteAsync(cli);
        }
        
        public TDA.Entities.Resultado DeleteCliente(TDA.Entities.Clientes cli) {
            return base.Channel.DeleteCliente(cli);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteClienteAsync(TDA.Entities.Clientes cli) {
            return base.Channel.DeleteClienteAsync(cli);
        }
        
        public TDA.Entities.Clientes[] SelectCliente(TDA.Entities.Clientes cli) {
            return base.Channel.SelectCliente(cli);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Clientes[]> SelectClienteAsync(TDA.Entities.Clientes cli) {
            return base.Channel.SelectClienteAsync(cli);
        }
        
        public TDA.Entities.Clientes[] BuscarClienteID(System.Nullable<long> ID) {
            return base.Channel.BuscarClienteID(ID);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Clientes[]> BuscarClienteIDAsync(System.Nullable<long> ID) {
            return base.Channel.BuscarClienteIDAsync(ID);
        }
        
        public TDA.Entities.Resultado InsertPaquete(TDA.Entities.Paquetes paq) {
            return base.Channel.InsertPaquete(paq);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPaqueteAsync(TDA.Entities.Paquetes paq) {
            return base.Channel.InsertPaqueteAsync(paq);
        }
        
        public TDA.Entities.Resultado UpdatePaquete(TDA.Entities.Paquetes paq) {
            return base.Channel.UpdatePaquete(paq);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdatePaqueteAsync(TDA.Entities.Paquetes paq) {
            return base.Channel.UpdatePaqueteAsync(paq);
        }
        
        public TDA.Entities.Paquetes[] SelectPaquete(TDA.Entities.Paquetes paq) {
            return base.Channel.SelectPaquete(paq);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Paquetes[]> SelectPaqueteAsync(TDA.Entities.Paquetes paq) {
            return base.Channel.SelectPaqueteAsync(paq);
        }
        
        public TDA.Entities.Paquetes[] BuscarPaqueteID(System.Nullable<long> ID) {
            return base.Channel.BuscarPaqueteID(ID);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Paquetes[]> BuscarPaqueteIDAsync(System.Nullable<long> ID) {
            return base.Channel.BuscarPaqueteIDAsync(ID);
        }
        
        public TDA.Entities.Resultado InsertPaqueteDia(TDA.Entities.PaqueteDias pqd) {
            return base.Channel.InsertPaqueteDia(pqd);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPaqueteDiaAsync(TDA.Entities.PaqueteDias pqd) {
            return base.Channel.InsertPaqueteDiaAsync(pqd);
        }
        
        public TDA.Entities.Resultado DeletePaqueteDia(TDA.Entities.PaqueteDias pqd) {
            return base.Channel.DeletePaqueteDia(pqd);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeletePaqueteDiaAsync(TDA.Entities.PaqueteDias pqd) {
            return base.Channel.DeletePaqueteDiaAsync(pqd);
        }
        
        public TDA.Entities.PaqueteDias[] SelectPaqueteDia() {
            return base.Channel.SelectPaqueteDia();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.PaqueteDias[]> SelectPaqueteDiaAsync() {
            return base.Channel.SelectPaqueteDiaAsync();
        }
        
        public TDA.Entities.Resultado InsertPaqueteGrupoCliente(TDA.Entities.PaqueteGrupoClientes pgc) {
            return base.Channel.InsertPaqueteGrupoCliente(pgc);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPaqueteGrupoClienteAsync(TDA.Entities.PaqueteGrupoClientes pgc) {
            return base.Channel.InsertPaqueteGrupoClienteAsync(pgc);
        }
        
        public TDA.Entities.Resultado DeletePaqueteGrupoCliente(TDA.Entities.PaqueteGrupoClientes pgc) {
            return base.Channel.DeletePaqueteGrupoCliente(pgc);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeletePaqueteGrupoClienteAsync(TDA.Entities.PaqueteGrupoClientes pgc) {
            return base.Channel.DeletePaqueteGrupoClienteAsync(pgc);
        }
        
        public TDA.Entities.PaqueteGrupoClientes[] SelectPaqueteGrupoCliente() {
            return base.Channel.SelectPaqueteGrupoCliente();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.PaqueteGrupoClientes[]> SelectPaqueteGrupoClienteAsync() {
            return base.Channel.SelectPaqueteGrupoClienteAsync();
        }
        
        public TDA.Entities.Resultado InsertPaqueteProducto(TDA.Entities.PaqueteProductos ppr) {
            return base.Channel.InsertPaqueteProducto(ppr);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPaqueteProductoAsync(TDA.Entities.PaqueteProductos ppr) {
            return base.Channel.InsertPaqueteProductoAsync(ppr);
        }
        
        public TDA.Entities.Resultado DeletePaqueteProducto(TDA.Entities.PaqueteProductos ppr) {
            return base.Channel.DeletePaqueteProducto(ppr);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeletePaqueteProductoAsync(TDA.Entities.PaqueteProductos ppr) {
            return base.Channel.DeletePaqueteProductoAsync(ppr);
        }
        
        public TDA.Entities.PaqueteProductos[] SelectPaqueteProducto() {
            return base.Channel.SelectPaqueteProducto();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.PaqueteProductos[]> SelectPaqueteProductoAsync() {
            return base.Channel.SelectPaqueteProductoAsync();
        }
        
        public TDA.Entities.Resultado InsertPromocion(TDA.Entities.Promociones pro) {
            return base.Channel.InsertPromocion(pro);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPromocionAsync(TDA.Entities.Promociones pro) {
            return base.Channel.InsertPromocionAsync(pro);
        }
        
        public TDA.Entities.Resultado UpdatePromocion(TDA.Entities.Promociones pro) {
            return base.Channel.UpdatePromocion(pro);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> UpdatePromocionAsync(TDA.Entities.Promociones pro) {
            return base.Channel.UpdatePromocionAsync(pro);
        }
        
        public TDA.Entities.Promociones[] SelectPromocion(TDA.Entities.Promociones pro) {
            return base.Channel.SelectPromocion(pro);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Promociones[]> SelectPromocionAsync(TDA.Entities.Promociones pro) {
            return base.Channel.SelectPromocionAsync(pro);
        }
        
        public TDA.Entities.Promociones[] BuscarPromocionID(System.Nullable<long> ID) {
            return base.Channel.BuscarPromocionID(ID);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Promociones[]> BuscarPromocionIDAsync(System.Nullable<long> ID) {
            return base.Channel.BuscarPromocionIDAsync(ID);
        }
        
        public TDA.Entities.Resultado InsertPromocionDia(TDA.Entities.PromocionDias prd) {
            return base.Channel.InsertPromocionDia(prd);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPromocionDiaAsync(TDA.Entities.PromocionDias prd) {
            return base.Channel.InsertPromocionDiaAsync(prd);
        }
        
        public TDA.Entities.Resultado DeletePromocionDia(TDA.Entities.PromocionDias prd) {
            return base.Channel.DeletePromocionDia(prd);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeletePromocionDiaAsync(TDA.Entities.PromocionDias prd) {
            return base.Channel.DeletePromocionDiaAsync(prd);
        }
        
        public TDA.Entities.PromocionDias[] SelectPromocionDia() {
            return base.Channel.SelectPromocionDia();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.PromocionDias[]> SelectPromocionDiaAsync() {
            return base.Channel.SelectPromocionDiaAsync();
        }
        
        public TDA.Entities.Resultado InsertPromocionPaquete(TDA.Entities.PromocionPaquetes prp) {
            return base.Channel.InsertPromocionPaquete(prp);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPromocionPaqueteAsync(TDA.Entities.PromocionPaquetes prp) {
            return base.Channel.InsertPromocionPaqueteAsync(prp);
        }
        
        public TDA.Entities.Resultado DeletePromocionPaquete(TDA.Entities.PromocionPaquetes prp) {
            return base.Channel.DeletePromocionPaquete(prp);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeletePromocionPaqueteAsync(TDA.Entities.PromocionPaquetes prp) {
            return base.Channel.DeletePromocionPaqueteAsync(prp);
        }
        
        public TDA.Entities.PromocionPaquetes[] SelectPromocionPaquete() {
            return base.Channel.SelectPromocionPaquete();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.PromocionPaquetes[]> SelectPromocionPaqueteAsync() {
            return base.Channel.SelectPromocionPaqueteAsync();
        }
        
        public TDA.Entities.Resultado InsertPromocionTipoProducto(TDA.Entities.PromocionTipoProductos ptp) {
            return base.Channel.InsertPromocionTipoProducto(ptp);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPromocionTipoProductoAsync(TDA.Entities.PromocionTipoProductos ptp) {
            return base.Channel.InsertPromocionTipoProductoAsync(ptp);
        }
        
        public TDA.Entities.Resultado DeletePromocionTipoProducto(TDA.Entities.PromocionTipoProductos ptp) {
            return base.Channel.DeletePromocionTipoProducto(ptp);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeletePromocionTipoProductoAsync(TDA.Entities.PromocionTipoProductos ptp) {
            return base.Channel.DeletePromocionTipoProductoAsync(ptp);
        }
        
        public TDA.Entities.PromocionTipoProductos[] SelectPromocionTipoProducto() {
            return base.Channel.SelectPromocionTipoProducto();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.PromocionTipoProductos[]> SelectPromocionTipoProductoAsync() {
            return base.Channel.SelectPromocionTipoProductoAsync();
        }
        
        public TDA.Entities.Resultado InsertPromocionProducto(TDA.Entities.PromocionProductos ppr) {
            return base.Channel.InsertPromocionProducto(ppr);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPromocionProductoAsync(TDA.Entities.PromocionProductos ppr) {
            return base.Channel.InsertPromocionProductoAsync(ppr);
        }
        
        public TDA.Entities.Resultado DeletePromocionProducto(TDA.Entities.PromocionProductos ppr) {
            return base.Channel.DeletePromocionProducto(ppr);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeletePromocionProductoAsync(TDA.Entities.PromocionProductos ppr) {
            return base.Channel.DeletePromocionProductoAsync(ppr);
        }
        
        public TDA.Entities.PromocionProductos[] SelectPromocionProducto() {
            return base.Channel.SelectPromocionProducto();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.PromocionProductos[]> SelectPromocionProductoAsync() {
            return base.Channel.SelectPromocionProductoAsync();
        }
        
        public TDA.Entities.Resultado InsertPromocionGrupoCliente(TDA.Entities.PromocionGrupoClientes ppr) {
            return base.Channel.InsertPromocionGrupoCliente(ppr);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertPromocionGrupoClienteAsync(TDA.Entities.PromocionGrupoClientes ppr) {
            return base.Channel.InsertPromocionGrupoClienteAsync(ppr);
        }
        
        public TDA.Entities.Resultado DeletePromocionGrupoCliente(TDA.Entities.PromocionGrupoClientes ppr) {
            return base.Channel.DeletePromocionGrupoCliente(ppr);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeletePromocionGrupoClienteAsync(TDA.Entities.PromocionGrupoClientes ppr) {
            return base.Channel.DeletePromocionGrupoClienteAsync(ppr);
        }
        
        public TDA.Entities.PromocionGrupoClientes[] SelectPromocionGrupoCliente() {
            return base.Channel.SelectPromocionGrupoCliente();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.PromocionGrupoClientes[]> SelectPromocionGrupoClienteAsync() {
            return base.Channel.SelectPromocionGrupoClienteAsync();
        }
        
        public TDA.Entities.Resultado InsertVenta(TDA.Entities.Ventas ven) {
            return base.Channel.InsertVenta(ven);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertVentaAsync(TDA.Entities.Ventas ven) {
            return base.Channel.InsertVentaAsync(ven);
        }
        
        public TDA.Entities.Resultado DeleteVenta(TDA.Entities.Ventas ven) {
            return base.Channel.DeleteVenta(ven);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteVentaAsync(TDA.Entities.Ventas ven) {
            return base.Channel.DeleteVentaAsync(ven);
        }
        
        public TDA.Entities.Ventas[] SelectVenta() {
            return base.Channel.SelectVenta();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Ventas[]> SelectVentaAsync() {
            return base.Channel.SelectVentaAsync();
        }
        
        public TDA.Entities.Resultado InsertVentaDetalle(TDA.Entities.VentaDetalles ved) {
            return base.Channel.InsertVentaDetalle(ved);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertVentaDetalleAsync(TDA.Entities.VentaDetalles ved) {
            return base.Channel.InsertVentaDetalleAsync(ved);
        }
        
        public TDA.Entities.Resultado DeleteVentaDetalle(TDA.Entities.VentaDetalles ved) {
            return base.Channel.DeleteVentaDetalle(ved);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteVentaDetalleAsync(TDA.Entities.VentaDetalles ved) {
            return base.Channel.DeleteVentaDetalleAsync(ved);
        }
        
        public TDA.Entities.VentaDetalles[] SelectVentaDetalle() {
            return base.Channel.SelectVentaDetalle();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.VentaDetalles[]> SelectVentaDetalleAsync() {
            return base.Channel.SelectVentaDetalleAsync();
        }
        
        public TDA.Entities.Resultado InsertVentaDia(TDA.Entities.VentaDias ved) {
            return base.Channel.InsertVentaDia(ved);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertVentaDiaAsync(TDA.Entities.VentaDias ved) {
            return base.Channel.InsertVentaDiaAsync(ved);
        }
        
        public TDA.Entities.Resultado DeleteVentaDia(TDA.Entities.VentaDias ved) {
            return base.Channel.DeleteVentaDia(ved);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> DeleteVentaDiaAsync(TDA.Entities.VentaDias ved) {
            return base.Channel.DeleteVentaDiaAsync(ved);
        }
        
        public TDA.Entities.VentaDias[] SelectVentaDia() {
            return base.Channel.SelectVentaDia();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.VentaDias[]> SelectVentaDiaAsync() {
            return base.Channel.SelectVentaDiaAsync();
        }
        
        public TDA.Entities.Resultado InsertLog(TDA.Entities.Log log) {
            return base.Channel.InsertLog(log);
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Resultado> InsertLogAsync(TDA.Entities.Log log) {
            return base.Channel.InsertLogAsync(log);
        }
        
        public TDA.Entities.Log[] SelectLog() {
            return base.Channel.SelectLog();
        }
        
        public System.Threading.Tasks.Task<TDA.Entities.Log[]> SelectLogAsync() {
            return base.Channel.SelectLogAsync();
        }
    }
}
